<!-- Video.js CSS & JS and IMA SDK libraries -->
<link href="https://vjs.zencdn.net/7.20.3/video-js.css" rel="stylesheet">
<script src="https://vjs.zencdn.net/7.20.3/video.min.js"></script>
<script src="https://imasdk.googleapis.com/js/sdkloader/ima3.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/videojs-contrib-ads/6.6.4/videojs.ads.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/videojs-ima/1.8.0/videojs.ima.min.js"></script>

<video style="outline:none;width:100%;background-color:#000" playsinline poster="<%= thumbnail %>"
    id="player" class="on-video_player video-js player-style-<%= params.player_style %>"
    preload="<% if params.preload %>auto<% else %>none<% end %>"
    <% if params.autoplay %>autoplay<% end %>
    <% if params.video_loop %>loop<% end %>
    <% if params.controls %>controls<% end %>>
    <% if (hlsvp = video.hls_manifest_url) && video.live_now && !CONFIG.disabled?("livestreams") %>
        <source src="<%= URI.parse(hlsvp).request_target %><% if params.local %>?local=true<% end %>" type="application/x-mpegURL" label="livestream">
    <% else %>
        <% if params.listen %>
            <% # default to 128k m4a stream
               best_m4a_stream_index = 0
               best_m4a_stream_bitrate = 0
               audio_streams.each_with_index do |fmt, i|
                 bandwidth = fmt["bitrate"].as_i
                 if (fmt["mimeType"].as_s.starts_with?("audio/mp4") && bandwidth > best_m4a_stream_bitrate)
                   best_m4a_stream_bitrate = bandwidth
                   best_m4a_stream_index = i
                 end
               end

               audio_streams.each_with_index do |fmt, i|
                src_url  = "/latest_version?id=#{video.id}&itag=#{fmt["itag"]}"
                src_url += "&local=true" if params.local
                src_url = invidious_companion.public_url.to_s + src_url + 
                            "&check=#{invidious_companion_encrypt(video.id)}" if (invidious_companion)

                bitrate = fmt["bitrate"]
                mimetype = HTML.escape(fmt["mimeType"].as_s)

                selected = (i == best_m4a_stream_index)
            %>
                <source src="<%= src_url %>" type='<%= mimetype %>' label="<%= bitrate %>k" selected="<%= selected %>">
                <% if !params.local && !CONFIG.disabled?("local") %>
                <source src="<%= src_url %>&local=true" type='<%= mimetype %>' hidequalityoption="true">
                <% end %>
            <% end %>
        <% else %>
            <% if params.quality == "dash"
               src_url = "/api/manifest/dash/id/" + video.id + "?local=true&unique_res=1"
               src_url = invidious_companion.public_url.to_s + src_url +
                            "&check=#{invidious_companion_encrypt(video.id)}" if (invidious_companion)
            %>
                <source src="<%= src_url %>" type='application/dash+xml' label="dash">
            <% end %>

            <%
            fmt_stream.reject! { |f| f["itag"] == 17 }
            fmt_stream.sort_by! {|f| params.quality == f["quality"] ? 0 : 1 }
            fmt_stream.each_with_index do |fmt, i|
                src_url  = "/latest_version?id=#{video.id}&itag=#{fmt["itag"]}"
                src_url += "&local=true" if params.local
                src_url = invidious_companion.public_url.to_s + src_url +
                            "&check=#{invidious_companion_encrypt(video.id)}" if (invidious_companion)

                quality = fmt["quality"]
                mimetype = HTML.escape(fmt["mimeType"].as_s)

                selected = params.quality ? (params.quality == quality) : (i == 0)
            %>
                <source src="<%= src_url %>" type="<%= mimetype %>" label="<%= quality %>" selected="<%= selected %>">
                <% if !params.local && !CONFIG.disabled?("local") %>
                <source src="<%= src_url %>&local=true" type="<%= mimetype %>" hidequalityoption="true">
                <% end %>
            <% end %>
        <% end %>

        <% preferred_captions.each do |caption| %>
            <track kind="captions" src="/api/v1/captions/<%= video.id %>?label=<%= caption.name %>" label="<%= caption.name %>">
        <% end %>

        <% captions.each do |caption| %>
            <track kind="captions" src="/api/v1/captions/<%= video.id %>?label=<%= caption.name %>" label="<%= caption.name %>">
        <% end %>
    <% end %>
</video>

<script id="player_data" type="application/json">
<%=
{
    "aspect_ratio" => aspect_ratio,
    "title" => video.title,
    "description" => HTML.escape(video.short_description),
    "thumbnail" => thumbnail,
    "preferred_caption_found" => !preferred_captions.empty?
}.to_pretty_json
%>
</script>

<!-- VAST 3.0 Pre-Roll Ad Integration using IMA SDK -->
<script>
  // Initialize Video.js with the IMA plugin on the existing player element.
  var player = videojs('player');
  
  // Configure the IMA plugin with your VAST 3.0 ad tag.
  player.ima({
    adTagUrl: 'https://juhevomu.com/dAmfF.zkdYGCN/vuZ/GoUH/seGmr9cuBZFUxlhk/PzTcYAyPMgDwcj3tMLDvg-toNQjnIzwoNIzzcdwMOFS/Z/s/awWN1Dp/dTDJ0dx-',
    debug: true,
    adWillAutoSkip: false, // Require user interaction to skip.
    timeout: 5000,
    prerollTimeout: 10000
  });
  
  // When the player is ready, initialize the ad container and request the ads.
  player.ready(function() {
    player.ima.initializeAdDisplayContainer();
    player.ima.requestAds();
  });
  
  // Listen for ad events.
  player.on('ads-ad-skipped', function() {
    console.log('Ad skipped by the user.');
  });
  player.on('ads-ad-ended', function() {
    console.log('Ad ended.');
  });
  
  // Fallback: If there's an error loading the ad, play the main video.
  player.on('ads-error', function() {
    console.log('Ad error encountered, proceeding to play the main video.');
    player.play();
  });
  
  // Ensure the main video plays after the ad ends.
  player.on('ads-ad-end', function() {
    player.play();
  });
</script>

<script src="/js/player.js?v=<%= ASSET_COMMIT %>"></script>
